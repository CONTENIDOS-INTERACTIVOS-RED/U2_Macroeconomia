{"remainingRequest":"/home/runner/work/U2_Macroeconomia/U2_Macroeconomia/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/runner/work/U2_Macroeconomia/U2_Macroeconomia/node_modules/pug-plain-loader/index.js!/home/runner/work/U2_Macroeconomia/U2_Macroeconomia/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/runner/work/U2_Macroeconomia/U2_Macroeconomia/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/U2_Macroeconomia/U2_Macroeconomia/src/views/curso/Tema2.vue?vue&type=template&id=7e1a21ad&lang=pug&","dependencies":[{"path":"/home/runner/work/U2_Macroeconomia/U2_Macroeconomia/src/views/curso/Tema2.vue","mtime":1736989419167},{"path":"/home/runner/work/U2_Macroeconomia/U2_Macroeconomia/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U2_Macroeconomia/U2_Macroeconomia/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/runner/work/U2_Macroeconomia/U2_Macroeconomia/node_modules/pug-plain-loader/index.js","mtime":499162500000},{"path":"/home/runner/work/U2_Macroeconomia/U2_Macroeconomia/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U2_Macroeconomia/U2_Macroeconomia/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}